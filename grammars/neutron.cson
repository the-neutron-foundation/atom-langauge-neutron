'scopeName': 'source.ntn'
'name': 'Neutron'
'fileTypes': ['ntn']

'patterns': [
  {
    'match': '\\d+'
    'name': 'constant.numeric.neutron'
  },
  {
    'match': '//.*'
    'name': 'comment.line.double-slash'
  },
  {
    'match': "\\d*\\.\\d+"
    'name': 'constant.numeric.neutron'
  },
  {
    'begin': '"'
    'beginCaptures':
        '0':
            'name': 'punctuation.definition.string.begin.neutron'
    'end': '"'
    'endCaptures':
        '0':
            'name': 'punctuation.definition.string.end.neutron'
    'name': 'string.quoted.double.neutron'
  },
  {
    'begin': '`'
    'beginCaptures':
      '0':
        'name': 'punctuation.definition.string.begin.neutron'
    'end': '`'
    'endCaptures':
      '0':
        'name': 'punctuation.definition.string.end.neutron'
    'name': 'meta.python.neutron'
    'patterns': [
      {
        'include': 'source.python'
      }
    ]
  },
  #{
  #  'match': '=='
  #  'name': 'keyword.operator.neutron'
  #},
  #{
  #  'match': '!='
  #  'name': 'keyword.operator.neutron'
  #},
  #{
  #  'match': '=>'
  #  'name': 'keyword.operator.neutron'
  #},
  #{
  #  'match': '=<'
  #  'name': 'keyword.operator.neutron'
  #},
  {
    'match': 'true'
    'name': 'constant.language.neutron'
  },
  {
    'match': 'false'
    'name': 'constant.language.neutron'
  },
  {
    'match': 'null'
    'name': 'constant.language.neutron'
  },
  {
    'match': 'while'
    'name': 'keyword.control.neutron'
  },
  {
    'match': 'if'
    'name': 'keyword.control.neutron'
  },
  {
    'match': 'else'
    'name': 'keyword.control.neutron'
  },
  {
    'match': 'del'
    'name': 'keyword.control.neutron'
  },
  {
    'match': 'return'
    'name': 'keyword.control.neutron'
  },
  {
    'match': 'break'
    'name': 'keyword.control.neutron'
  },
  {
    'match': 'in'
    'name': 'keyword.control.neutron'
  },
  {
    'match': 'for'
    'name': 'keyword.control.neutron'
  },
  {
    'match': 'this'
    'name': 'variable.language.neutron'
  },
  {
    'match': '\\b(func)\\s+(--[a-zA-Z_]([a-zA-Z0-9_]|!)*--|[a-zA-Z_]([a-zA-Z0-9_]|!)*)\\s*\\('
    'captures':
        '1':
            'name': 'keyword.control.neutron'
        '2':
            'name': 'entity.name.function.neutron'
    'name': 'meta.function.neutron'
  },
  {
    'match': '\\b(--[a-zA-Z_]([a-zA-Z0-9_]|!)*--|[a-zA-Z_]([a-zA-Z0-9_]|!)*)\\s*\\('
    'captures':
        '1':
            'name': 'entity.name.function.neutron'
    'name': 'meta.function.neutron'
  },
  {
    'match': '\\b(class)\\s+(--[a-zA-Z_]([a-zA-Z0-9_]|!)*--|[a-zA-Z_]([a-zA-Z0-9_]|!)*)'
    'captures':
        '1':
            'name': 'keyword.control.neutron'
        '2':
            'name': 'entity.name.type.neutron'
    'name': 'meta.class.neutron'
  },
  {
    'match': '\\b(--[a-zA-Z_]([a-zA-Z0-9_]|!)*--|[a-zA-Z_]([a-zA-Z0-9_]|!)*)\\s*(::)\\s*(--[a-zA-Z_]([a-zA-Z0-9_]|!)*--|[a-zA-Z_]([a-zA-Z0-9_]|!)*)'
    'captures':
        '1':
            'name': 'entity.name.function.neutron'
        '2':
            'name': 'keyword.control.neutron'
        '3':
            'name': 'entity.name.function.neutron'
    'name': 'meta.function.neutron'
  },
  {
    'match': '\\b(--[a-zA-Z_]([a-zA-Z0-9_]|!)*--|[a-zA-Z_]([a-zA-Z0-9_]|!)*)\\s*(::)\\s*(--[a-zA-Z_]([a-zA-Z0-9_]|!)*--|[a-zA-Z_]([a-zA-Z0-9_]|!)*)\\s*\\('
    'captures':
        '1':
            'name': 'entity.name.function.neutron'
        '2':
            'name': 'keyword.control.neutron'
        '3':
            'name': 'entity.name.function.neutron'
    'name': 'meta.function.neutron'
  },
]
